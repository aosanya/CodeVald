

codelist.append('')
codelist.append('')
codelist.append('')
codelist.append('')
codelist.append('')
codelist.append('')
codelist.append('')
codelist.append('')
codelist.append('')
codelist.append('')
codelist.append('\n')
entityindex = 0
entitycount = len(o_XML.entities('entity'))
for each_entity in o_XML.entities('entity'):
    entityXML = ReadXML.ReadXML(each_entity, o_GenerateCode.codeobjects, o_GenerateCode.links, True, o_GenerateCode.getmappers()) 
    o_XML = entityXML
    
    codelist.append('')
    codelist.append('\n<System.ComponentModel.DataObject()> _')
    codelist.append('\nPublic Class ' + entityXML.entityproperty('name') + 'BLL')
    codelist.append('\n')
    codelist.append('\n	<System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, True)> _')
    codelist.append('\n    Public Function Add' + entityXML.entityproperty('name') + '(')
    propertyindex = 0
    propertycount = len(o_XML.entities('property'))
    for each_property in o_XML.entities('property'):
        propertyXML = ReadXML.ReadXML(each_property, o_GenerateCode.codeobjects, o_GenerateCode.links, True, o_GenerateCode.getmappers()) 
        o_XML = propertyXML
        
        codelist.append('ByVal ' + propertyXML.entityproperty('name') + ' As ' + propertyXML.entityproperty('type') + '')
        
        propertyindex += 1
        if propertyindex < propertycount:
        	codelist.append(',')
        
    codelist.append('\n) As Boolean')
    codelist.append('\n        \' Create a new ' + entityXML.entityproperty('name') + 'Row instance')
    codelist.append('\n        Dim ' + entityXML.entityproperty('name') + ' As New Sakila.' + entityXML.entityproperty('name') + 'DataTable()')
    codelist.append('\n        Dim ' + entityXML.entityproperty('name') + ' As Sakila.' + entityXML.entityproperty('name') + 'Row = ' + entityXML.entityproperty('name') + '.New' + entityXML.entityproperty('name') + 'Row()')
    codelist.append('\n		')
    propertyindex = 0
    propertycount = len(o_XML.entities('property'))
    for each_property in o_XML.entities('property'):
        propertyXML = ReadXML.ReadXML(each_property, o_GenerateCode.codeobjects, o_GenerateCode.links, True, o_GenerateCode.getmappers()) 
        o_XML = propertyXML
        
        codelist.append('' + entityXML.entityproperty('name') + '.' + propertyXML.entityproperty('name') + ' = ' + propertyXML.entityproperty('name') + '')
        
        propertyindex += 1
        if propertyindex < propertycount:
        	codelist.append('')
        
    codelist.append('\n')
    codelist.append('\n        ')
    codelist.append('\n        \' Add the new ' + entityXML.entityproperty('name') + '')
    codelist.append('\n        ' + entityXML.entityproperty('name') + '.Add' + entityXML.entityproperty('name') + 'Row(' + entityXML.entityproperty('name') + ')')
    codelist.append('\n        Dim rowsAffected As Integer = Adapter.Update(' + entityXML.entityproperty('name') + ')')
    codelist.append('\n')
    codelist.append('\n        \' Return true if precisely one row was inserted, otherwise false')
    codelist.append('\n        Return rowsAffected = 1')
    codelist.append('\n    End Function')
    
    entityindex += 1
    if entityindex < entitycount:
    	codelist.append('')
codelist.append('\n')
codelist.append('\nEnd Class')
codelist.append('\n')

codelist.append('\n')