

codelist.append('')
codelist.append('')
codelist.append('')
codelist.append('')
codelist.append('')
codelist.append('')
codelist.append('\n')

entityindex = 0
entitycount = len(o_XML.entities('entity'))
for each_entity in o_XML.entities('entity'):
    entityXML = ReadXML.ReadXML(each_entity, o_GenerateCode.codeobjects, o_GenerateCode.links, True, o_GenerateCode.getmappers()) 
    o_XML = entityXML
    
    codelist.append('\nclass ' + entityXML.entityproperty('name') + '(models.Model):')
    
    propertyindex = 0
    propertycount = len(o_XML.entities('property'))
    for each_property in o_XML.entities('property'):
        propertyXML = ReadXML.ReadXML(each_property, o_GenerateCode.codeobjects, o_GenerateCode.links, True, o_GenerateCode.getmappers()) 
        o_XML = propertyXML
        
        codelist.append('\n      ' + propertyXML.entityproperty('name') + ' = models.' + propertyXML.entityproperty('type') + '')
        if propertyXML.entityproperty('precision') != "<#Error#>":
	        codelist.append('\n(max_length=' + propertyXML.entityproperty('precision') + ')')
        
        codelist.append('')
        
        propertyindex += 1
        if propertyindex < propertycount:
        	codelist.append('')
        
    codelist.append('')
    codelist.append('\n')
    codelist.append('\n	')
    codelist.append('\n	def __str__(self): # __unicode__ on Python 2 return self.name')
    codelist.append('\n	')
    codelist.append('\n')
    
    entityindex += 1
    if entityindex < entitycount:
    	codelist.append('')
codelist.append('')
codelist.append('\n')